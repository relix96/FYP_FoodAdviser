@using FoodAdviserModels.Models

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Food Adviser</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
    </nav>
</div>

@foreach(var filter in Filters)
{
    <SfDropDownButton Content="@filter" ><!--check name for dropdown filter-->
        <DropDownMenuItems>
            @foreach(var x in filter)
            {

                 <DropDownMenuItem Text="@x"></DropDownMenuItem>
            }

           
            <DropDownMenuItem Text="Edit"></DropDownMenuItem>
            
        </DropDownMenuItems>
    </SfDropDownButton>




}




@code {
    public string navFilter = "Diet";

    [Parameter]
    public List<String> Diet{ get;set;} = new List<String>();

    [Parameter]
    public List<String> Intolerance{ get;set;} = new List<String>();

    [Parameter]
    public List<String> Cuisine{ get;set;} = new List<String>();

    [Parameter]
    public List<String> Type{ get;set;} = new List<String>();

    List<List<String>> Filters = new List<List<String>>();

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        GetFilters();
    }

    protected override async Task OnParametersSetAsync() => await GetFilters();

        private  async Task<List<List<String>>> GetFilters()
    {
        
        Diet = Enum.GetNames(typeof(Filter.Diet)).ToList();
        Intolerance = Enum.GetNames(typeof(Filter.Intolerance)).ToList();
        Cuisine = Enum.GetNames(typeof(Filter.Cuisine)).ToList();
        Type = Enum.GetNames(typeof(Filter.Type)).ToList();

        Filters.Add(Diet);
        Filters.Add(Intolerance);
        Filters.Add(Cuisine);
        Filters.Add(Type);
        return Filters;
    }


}
